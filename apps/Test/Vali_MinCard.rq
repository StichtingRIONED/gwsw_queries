# Validatie: test de min-cardinaliteit (ook ondergrens exacte cardinaliteit)
# 20151118-20170310

select ?typ ?sTyp ?sLab ?sAsp ?msg ?punt ?lijn

where 
{ 
	# variabele: relatie-type
	
    {
     BIND (:hasAspect AS ?p)
    }
    UNION
    {
	 BIND (:hasPart AS ?p)
	}
     UNION
    {
     BIND (:hasInput AS ?p)
	}
    UNION
    {
     BIND (:hasOutput AS ?p)
	}
    UNION # 20170225
    {
     BIND (:hasConnection AS ?p)
	}
	# variabele: card. type
	{
	 BIND (owl:qualifiedCardinality as ?card)
	}
	UNION
	{
	 BIND (owl:minQualifiedCardinality as ?card)
	}
    ?styp rdfs:subClassOf ?cls .
    FILTER (!(isBlank(?styp)))
	
    ?cls ?card ?At .
    FILTER (?At > 0)
    
	?cls owl:onProperty ?p .
	?cls owl:onClass ?o .

    ?bimSub sesame:directType ?styp . # gebruik eerste type

	OPTIONAL
	{
        ?bimSub ?p ?bimObj .
 	    ?bimObj rdf:type ?o . # gebruik inference
	}
	filter (!BOUND(?bimObj))
    
    #BIND ("#" AS ?aft)
    BIND ("gwsw.nl/1.3.1/totaal/" AS ?aft)

    # initialiseer ?s en ?sLab (put/lei + naam)
   
    OPTIONAL
    {
        ?bimSub rdfs:label ?s0 .
	}
    OPTIONAL # Aspect van aspect? Zoek naam
    {
        ?bimSub :isAspectOf ?sup1 .
        ?sup1 rdfs:label ?s1 .
    }
    OPTIONAL # Deel van aspect, bijv orientatie? Zoek naam
    {
        ?bimSub :isPartOf ?sup1 .
        ?sup1 :isAspectOf ?sup2 .
        ?sup2 rdfs:label ?s2 .
    }
    BIND (COALESCE (?s0, ?s1, ?s2, "") as ?sLab) # Altijd initialiseren voor rapportage
    BIND (if (bound(?s0), ?bimSub, if(bound(?s1), ?sup1, if(bound(?s2), ?sup2, ?bimSub))) as ?s) # De bijbehorende put/lei
    
    # initialiseer ?sTyp

 	BIND ( IF(CONTAINS(str(?styp), ?aft), strafter(str(?styp), ?aft), str(?styp)) as ?sTyp)
    
	# initialiseer ?sAsp
   
	OPTIONAL
	{
		?o rdfs:label ?asp .
        FILTER(lang(?asp) = "nl") # max 1 regel
	}
    BIND (IF(BOUND(?asp), ?asp, IF(CONTAINS(str(?o), ?aft), strafter(str(?o), ?aft), str(?o))) as ?sAsp)

    # initialiseer ?msg
   
 	BIND ( IF(CONTAINS(str(?p), ?aft), strafter(str(?p), ?aft), str(?p)) as ?prop)
    BIND (CONCAT("Verplichte relatie ", str(?prop), " ontbreekt") as ?msg)

    # initialiseer ?typ

    BIND (CONCAT("Ontbrekende relatie ", str(?prop)) as ?typ)
		
	OPTIONAL # Put-geometrie
	{
	   ?s :hasAspect 
	   [
		  rdf:type :Putorientatie ;
		  :hasAspect
		  [ 
			rdf:type :Punt ;
			:hasValue ?punt ;
		  ]
	   ]
	}
	OPTIONAL # Leiding-geometrie
	{
		FILTER (!BOUND(?punt)) # hou het snel (20170817)
		
	    ?s :hasAspect ?ori .
	    ?ori rdf:type :Leidingorientatie .
    
        optional # Leiding heeft eigen geo
        {
            ?ori :hasAspect
            [ 
                rdf:type :Lijn ;
                :hasValue ?geo0 ;
            ]
        }
		BIND (?geo0 as ?geo1) # Schakel deze in om ?Lijn WEL te construeren uit beginpunt/eindpunt
		# BIND (if (!BOUND(?geo0), "", ?geo0) as ?geo1) # Schakel deze in om ?Lijn NIET te construeren uit beginpunt/eindpunt

        optional # Geen eigen geo, zoek via bPunt, ePunt
        {
			FILTER (!BOUND(?geo1)) # hou het snel (20170817)
			
            ?ori :hasPart ?bpnt .
            ?bpnt rdf:type :BeginpuntLeiding .
            ?ori :hasPart ?epnt .
            ?epnt rdf:type :EindpuntLeiding .

            ?bpnt :hasConnection
            [ 
              :hasAspect
              [ 
                rdf:type :Punt ;
                :hasValue ?bgeo ;
              ]
            ] .
            bind (strafter(strbefore(str(?bgeo), "</gml:pos>"), "<gml:pos>") as ?bxy)
            ?epnt :hasConnection
            [ 
              :hasAspect
              [ 
                rdf:type :Punt ;
                :hasValue ?egeo ;
              ]
            ] .
            bind (strafter(strbefore(str(?egeo), "</gml:pos>"), "<gml:pos>") as ?exy) # lees inhoud gml:pos

            bind (concat("<gml:LineString xmlns:gml=\"http://www.opengis.net/gml\"><gml:posList srsDimension=\"2\">", str(?bxy), " ", str(?exy), "</gml:posList></gml:LineString>") as ?geo2)
        }
        BIND (COALESCE (?geo1, ?geo2) as ?lijn)
	}
}
