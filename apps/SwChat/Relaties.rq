# Datamodel: Onderscheidende kenmerken

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

PREFIX gwsw: <http://data.gwsw.nl/1.6/totaal/>
#PREFIX gwsw: <{{&version}}>

SELECT ?rec #?json

FROM <http://www.ontotext.com/explicit> # GrpahDB: gebruik alleen expliciete (not-inferred) binnen default Graph

where
{
  BIND (str(iri(gwsw:)) AS ?aft) # De datamodel-prefix

  ?cls rdf:type owl:Class .
  FILTER (CONTAINS(str(?cls), ?aft))
  ?cls rdfs:label ?lab .
  FILTER (lang(?lab) = "nl")
  BIND (IF (CONTAINS(str(?lab), " "), CONCAT("{{", ?lab, "}}"), ?lab) AS ?labCls)

  {
    ?cls rdfs:subClassOf [
      owl:onProperty gwsw:functie ;
      owl:hasValue ?obj ;
    ] .
    ?obj rdfs:label ?labObj .
    #BIND ("heeft als functie" as ?pred) 
    BIND ("heeft als functie:" as ?pred) 
    BIND ("functie" as ?predJ)
  }
  UNION {
    ?cls rdfs:subClassOf [
      owl:onProperty gwsw:uitvoering ;
      owl:hasValue ?obj ;
    ] .
    ?obj rdfs:label ?labObj .
    #BIND ("is uitgevoerd als" as ?pred) 
    BIND ("is uitgevoerd als:" as ?pred) 
    BIND ("uitvoering" as ?predJ)
  }
  UNION {
    ?cls rdfs:subClassOf [
      owl:onProperty gwsw:hasAspect ;
      owl:onClass ?obj ;
    ] .
    ?obj rdfs:label ?labO .
    BIND (IF (CONTAINS(str(?labO), " "), CONCAT("{{", ?labO, "}}"), ?labO) AS ?labObj)
    
    #BIND ("heeft als eigenschap type" as ?pred) 
    BIND ("heeft type eigenschap:" as ?pred) 
    BIND ("eigenschap" as ?predJ)
  }
  UNION {
    ?cls rdfs:subClassOf [
      owl:onProperty gwsw:hasPart ;
      owl:onClass ?obj ;
    ] .
    ?obj rdfs:label ?labO .
    BIND (IF (CONTAINS(str(?labO), " "), CONCAT("{{", ?labO, "}}"), ?labO) AS ?labObj)

    #BIND ("heeft als onderdeel type" as ?pred) 
    BIND ("heeft type onderdeel:" as ?pred) 
    BIND ("onderdeel" as ?predJ)
  }
  #BIND (concat("Type \"", ?labCls, "\" ", ?pred, " \"", ?labObj, "\".") as ?rec)
  #BIND (concat("Type ", ?labCls, " ", ?pred, " ", ?labObj, ".") as ?rec)
  BIND (concat("Een ", ?labCls, " ", ?pred, " ", ?labObj, ".") as ?rec)
  #BIND (concat("{\"id\": \"", ?labCls, "\", \"type\": \"klasse\", \"", ?predJ, "\": \"", ?labObj, "\"}" ) as ?json)
}
