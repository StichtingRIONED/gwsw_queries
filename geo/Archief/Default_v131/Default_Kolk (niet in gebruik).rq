PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX : <http://data.gwsw.nl/1.3/Meld/>

select ?Object ?NamObj ?Datum ?Cat2 ?Cat4 ?Actie1 ?DatumRein ?ItvReinDag ?Geometrie

where 
{ 
    ?proces rdf:type :MeldingenprocesStedelijkWater .
    ?proces rdfs:label ?Nummer .
    
    ?proces :hasPart ?aanname .
    ?aanname rdf:type :AannameMelding .
    ?aanname :hasOutput ?melding .
    
    ?melding :hasAspect ?dat .
    ?dat rdf:type :DatumAangemeld .
    ?dat :hasValue ?Datum .
    
    ?melding :hasAspect ?gebr .
    ?gebr rdf:type :Gebruiker .
    ?gebr :hasValue ?Gebruiker .
    
    Optional
    {
        ?melding :hasAspect ?opm .
        ?opm rdf:type :ToelichtingMelding .
        ?opm :hasValue ?Toelichting .
    }
    ?proces :hasPart ?waarnem .
    ?waarnem rdf:type :WaarnemingStedelijkWater .
    ?waarnem sesame:directType ?Cat2 .
    
    #filter (contains(str(?Cat2), "WateroverlastBuitenshuis"))
    
    Optional
    {
   	?waarnem rdf:type ?Cat1 .
    	?Cat1 sesame:directSubClassOf :WaarnemingStedelijkWater .
        filter (?Cat1 != ?Cat2)
	}
    Optional
    {
        ?waarnem :hasAspect ?wAsp .
        ?wAsp sesame:directType ?Cat3 .

        optional
        {
            ?wAsp :hasReference ?Cat4 .
        }
    }
    ?proces :hasPart ?diagS .
    ?diagS rdf:type :DiagnoseStellen .
    ?diagS :hasPart ?bepO .
    ?bepO rdf:type :BepalenOorzaak .
    
    ?bepO :hasInput ?obj .
    ?obj sesame:directType ?Object .
    
    ?obj rdfs:label ?NamObj .
    ?obj :hasAspect ?ori .
    ?ori rdf:type :Putorientatie .
    ?ori :hasAspect ?geom .
    ?geom rdf:type :Geometrie .
    ?geom :hasValue ?Geometrie .
    
    ?rein rdf:type :ReinigenEnInspecterenKolk .
    ?rein :hasInput ?obj .
    ?rein :hasAspect ?datM .
    ?datM rdf:type :DatumMaatregel .
    ?datM :hasValue ?DatumRein .
	
    bind (((YEAR(?Datum) * 365 + MONTH(?Datum) * 30.5 + DAY(?Datum)) - (YEAR(?DatumRein) * 365 + MONTH(?DatumRein) * 30.5 + DAY(?DatumRein))) as ?ItvReinDag)

    #filter (isnumeric(?Itv))
    #bind (if (?Itv < 50, 50, if(?Itv < 100, 100, if(?Itv < 150, 150, if(?Itv < 200, 200, if(?Itv < 250, 250, if(?Itv < 300, 300, if(?Itv < 350, 350, if(?Itv < 400, 400, if(?Itv < 450, 450, if(?Itv < 500, 500, if(?Itv < 550, 550, 600))))))))))) as ?ItvCat)
        
    Optional # Eventueel diagnose en subtype diagnose met reference/value
    {
        ?bepO :hasOutput ?diagn .
   	 	?diagn rdf:type :Diagnose .
    	?diagn sesame:directType ?Diag2 .
        
        optional
        {
            ?diagn :hasAspect ?dAsp .
            ?dAsp sesame:directType ?Diag3 .
            {
                ?dAsp :hasReference ?Diag4 .
            }
            union # reference of value
            {
                ?dAsp :hasValue ?Diag4 .
            }
        }
    }
    ?proces :hasPart ?verhelp .
    ?verhelp rdf:type :Verhelpen .
    
    optional
    {
        ?verhelp :hasPart ?act1 .
        ?act1 sesame:directType ?Actie1 .
    }
    #filter (?DatumRein < ?Datum)
    filter (contains(str(?Object), "Kolk") || contains(str(?Object), "kolk"))
    #filter (contains(str(?Actie1), "Reinigen") || contains(str(?Actie2), "Reinigen") || contains(str(?Actie3), "Reinigen"))
}
